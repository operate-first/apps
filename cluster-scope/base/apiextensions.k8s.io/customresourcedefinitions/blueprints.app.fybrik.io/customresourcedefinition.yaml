apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  name: blueprints.app.fybrik.io
spec:
  group: app.fybrik.io
  names:
    kind: Blueprint
    listKind: BlueprintList
    plural: blueprints
    singular: blueprint
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.observedState.ready
      name: Ready
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Blueprint is the Schema for the blueprints API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BlueprintSpec defines the desired state of Blueprint, which
              defines the components of the workload's data path that run in a particular
              cluster. In a single cluster environment there is one blueprint per
              workload (FybrikApplication). In a multi-cluster environment there is
              one Blueprint per cluster per workload (FybrikApplication).
            properties:
              application:
                description: ApplicationContext is a context of the origin FybrikApplication
                  (labels, properties, etc.)
                properties:
                  context:
                    description: Application context such as intent, role, etc.
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  selector:
                    description: Application selector is used to identify the user
                      workload. It is obtained from FybrikApplication spec.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                    type: object
                type: object
              cluster:
                description: Cluster indicates the cluster on which the Blueprint
                  runs
                type: string
              modules:
                additionalProperties:
                  description: BlueprintModule is a copy of a FybrikModule Custom
                    Resource.  It contains the information necessary to instantiate
                    a datapath component, including the parameters relevant for the
                    particular workload.
                  properties:
                    arguments:
                      description: Arguments are the input parameters for a specific
                        instance of a module.
                      properties:
                        assets:
                          description: Assets define asset related arguments, such
                            as data source, transformations, etc.
                          items:
                            description: AssetContext defines the input parameters
                              for modules that access an asset
                            properties:
                              args:
                                description: List of datastores associated with the
                                  asset
                                items:
                                  description: DataStore contains the details for
                                    accesing the data that are sent by catalog connectors
                                    Credentials for accesing the data are stored in
                                    Vault, in the location represented by Vault property.
                                  properties:
                                    connection:
                                      description: Connection has the relevant details
                                        for accesing the data (url, table, ssl, etc.)
                                      properties:
                                        name:
                                          description: Name of the connection to the
                                            data source
                                          type: string
                                      required:
                                      - name
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    format:
                                      description: Format represents data format (e.g.
                                        parquet) as received from catalog connectors
                                      type: string
                                    vault:
                                      additionalProperties:
                                        description: Holds details for retrieving
                                          credentials from Vault store.
                                        properties:
                                          address:
                                            description: Address is Vault address
                                            type: string
                                          authPath:
                                            description: AuthPath is the path to auth
                                              method i.e. kubernetes
                                            type: string
                                          role:
                                            description: Role is the Vault role used
                                              for retrieving the credentials
                                            type: string
                                          secretPath:
                                            description: SecretPath is the path of
                                              the secret holding the Credentials in
                                              Vault
                                            type: string
                                        required:
                                        - address
                                        - authPath
                                        - role
                                        - secretPath
                                        type: object
                                      description: Holds details for retrieving credentials
                                        by the modules from Vault store. It is a map
                                        so that different credentials can be stored
                                        for the different DataFlow operations.
                                      type: object
                                  required:
                                  - connection
                                  type: object
                                type: array
                              assetID:
                                description: AssetID identifies the asset to be used
                                  for accessing the data when it is ready It is copied
                                  from the FybrikApplication resource
                                type: string
                              capability:
                                description: Capability of the module
                                type: string
                              transformations:
                                description: Transformations are different types of
                                  processing that may be done to the data as it is
                                  copied.
                                items:
                                  properties:
                                    name:
                                      type: string
                                  required:
                                  - name
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                            required:
                            - assetID
                            - capability
                            type: object
                          type: array
                      type: object
                    assetIds:
                      description: assetIDs indicate the assets processed by this
                        module.  Included so we can track asset status as well as
                        module status in the future.
                      items:
                        type: string
                      type: array
                    chart:
                      description: Chart contains the location of the helm chart with
                        info detailing how to deploy
                      properties:
                        chartPullSecret:
                          description: Name of secret containing helm registry credentials
                          type: string
                        name:
                          description: Name of helm chart
                          type: string
                        values:
                          additionalProperties:
                            type: string
                          description: Values to pass to helm chart installation
                          type: object
                      required:
                      - name
                      type: object
                    name:
                      description: Name of the FybrikModule on which this is based
                      type: string
                  required:
                  - chart
                  - name
                  type: object
                description: Modules is a map which contains modules that indicate
                  the data path components that run in this cluster The map key is
                  moduleInstanceName which is the unique name for the deployed instance
                  related to this workload
                type: object
              modulesNamespace:
                description: ModulesNamespace is the namespace where modules should
                  be allocated
                type: string
            required:
            - cluster
            - modules
            - modulesNamespace
            type: object
          status:
            description: BlueprintStatus defines the observed state of Blueprint This
              includes readiness, error message, and indicators for the Kubernetes
              resources owned by the Blueprint for cleanup and status monitoring
            properties:
              modules:
                additionalProperties:
                  description: ObservedState represents a part of the generated Blueprint/Plotter
                    resource status that allows update of FybrikApplication status
                  properties:
                    error:
                      description: Error indicates that there has been an error to
                        orchestrate the modules and provides the error message
                      type: string
                    ready:
                      description: Ready represents that the modules have been orchestrated
                        successfully and the data is ready for usage
                      type: boolean
                  type: object
                description: ModulesState is a map which holds the status of each
                  module its key is the moduleInstanceName which is the unique name
                  for the deployed instance related to this workload
                type: object
              observedGeneration:
                description: ObservedGeneration is taken from the Blueprint metadata.  This
                  is used to determine during reconcile whether reconcile was called
                  because the desired state changed, or whether status of the allocated
                  resources should be checked.
                format: int64
                type: integer
              observedState:
                description: ObservedState includes information to be reported back
                  to the FybrikApplication resource It includes readiness and error
                  indications, as well as user instructions
                properties:
                  error:
                    description: Error indicates that there has been an error to orchestrate
                      the modules and provides the error message
                    type: string
                  ready:
                    description: Ready represents that the modules have been orchestrated
                      successfully and the data is ready for usage
                    type: boolean
                type: object
              releases:
                additionalProperties:
                  format: int64
                  type: integer
                description: Releases map each release to the observed generation
                  of the blueprint containing this release. At the end of reconcile,
                  each release should be mapped to the latest blueprint version or
                  be uninstalled.
                type: object
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ''
    plural: ''
  conditions: []
  storedVersions: []
