---
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "1"
  name: odh-monitoring
  labels:
    app: prometheus
    prometheus: k8s
spec:
  alerting:
    alertmanagers:
      - name: alertmanager-operated
        namespace: opf-monitoring
        port: web
  externalUrl: "http://prometheus-portal-opf-monitoring.apps.zero.massopen.cloud/"
  podMonitorSelector: {}
  serviceAccountName: prometheus-k8s
  serviceMonitorSelector: {}
  securityContext: {}
  ruleSelector:
    matchLabels:
      prometheus: odh-monitoring
      role: alert-rules
  additionalScrapeConfigs:
    name: additional-scrape-configs
    key: prometheus-additional.yaml
  remoteWrite:
    - url: "http://opf-observatorium-thanos-receive.opf-observatorium.svc.cluster.local:19291/api/v1/receive"
  replicas: 2
  retention: 7d
  storage:
    volumeClaimTemplate:
      spec:
        resources:
          requests:
            storage: 100Gi
  # Openshift OAuth Proxy config
  listenLocal: true
  containers:
    - args:
      - -provider=openshift
      - -pass-basic-auth=false
      - -https-address=:9091
      - -http-address=
      - -email-domain=*
      - -upstream=http://localhost:9090
      - '-openshift-sar={"resource": "namespaces", "verb": "get"}'
      - -openshift-service-account=prometheus-k8s
      - -openshift-ca=/etc/pki/tls/cert.pem
      - -openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      - -tls-cert=/etc/tls/private/tls.crt
      - -tls-key=/etc/tls/private/tls.key
      - -cookie-secret=SECRET
      - -skip-auth-regex=^/metrics
      - '-openshift-sar={"resource": "namespaces", "verb": "get", "resourceName":
          "opf-monitoring", "namespace": "opf-monitoring"}'
      - '-openshift-delegate-urls={"/":{"resource": "namespaces", "verb": "get", "resourceName":
          "opf-monitoring", "namespace": "opf-monitoring"}'
      image: registry.redhat.io/openshift4/ose-oauth-proxy:v4.7
      name: oauth-proxy
      ports:
      -   containerPort: 9091
          name: oauth-proxy
      resources: {}
      volumeMounts:
      -   mountPath: /etc/tls/private
          name: secret-prometheus-tls
          readOnly: false
  secrets:
  - prometheus-tls
