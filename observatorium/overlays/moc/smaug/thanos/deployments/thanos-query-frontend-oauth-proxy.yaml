---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: thanos-query-frontend-oauth-proxy
spec:
  selector:
    matchLabels:
      app: thanos-query-frontend-oauth-proxy
  replicas: 1
  template:
    metadata:
      labels:
        app: thanos-query-frontend-oauth-proxy
    spec:
      containers:
      -   args:
          - -provider=openshift
          - -pass-basic-auth=false
          - -https-address=:9091
          - -http-address=
          - -email-domain=*
          - -upstream=http://observatorium-thanos-query-frontend.opf-observatorium.svc.cluster.local:9090
          - '-openshift-sar={"resource": "namespaces", "verb": "get"}'
          - -openshift-service-account=thanos-query-frontend-oauth-proxy
          - -openshift-ca=/etc/pki/tls/cert.pem
          - -openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          - -tls-cert=/etc/tls/private/tls.crt
          - -tls-key=/etc/tls/private/tls.key
          - -cookie-secret=SECRET
          - -skip-auth-regex=^/metrics
          - '-openshift-sar={"resource": "namespaces", "verb": "get", "resourceName":
              "opf-observatorium", "namespace": "opf-observatorium"}'
          - '-openshift-delegate-urls={"/":{"resource": "namespaces", "verb": "get", "resourceName":
              "opf-observatorium", "namespace": "opf-observatorium"}}'
          image: registry.redhat.io/openshift4/ose-oauth-proxy:v4.8
          name: oauth-proxy
          ports:
          -   containerPort: 9091
              name: oauth-proxy
          resources:
            limits:
              cpu: 200m
              memory: 400Mi
            requests:
              cpu: 100m
              memory: 200Mi
          volumeMounts:
          -   mountPath: /etc/tls/private
              name: thanos-query-frontend-tls
              readOnly: false
      serviceAccountName: thanos-query-frontend-oauth-proxy
      volumes:
      - name: thanos-query-frontend-tls
        secret:
          secretName: thanos-query-frontend-tls
