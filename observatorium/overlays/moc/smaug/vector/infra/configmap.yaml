---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vector-config-infra
data:
  vector-config.yaml: |
    ---
    api:
      enabled: true
      address: 0.0.0.0:8686
      playground: false

    sources:
      infra-app-logs-kafka:
        type: kafka
        bootstrap_servers: odh-message-bus-kafka-bootstrap.opf-kafka.svc.cluster.local:9093
        group_id: cluster-logs-consumer
        key_field: message_key
        topics:
        - infra-prod.cluster-logs.application
        tls:
          enabled: true
          ca_file: "/mnt/ca-bundle.crt"
          crt_file: "/mnt/tls.crt"
          key_file: "/mnt/tls.key"

      infra-infra-logs-kafka:
        type: kafka
        bootstrap_servers: odh-message-bus-kafka-bootstrap.opf-kafka.svc.cluster.local:9093
        group_id: cluster-logs-consumer
        key_field: message_key
        topics:
        - infra-prod.cluster-logs.infrastructure
        tls:
          enabled: true
          ca_file: "/mnt/ca-bundle.crt"
          crt_file: "/mnt/tls.crt"
          key_file: "/mnt/tls.key"

      infra-audit-logs-kafka:
        type: kafka
        bootstrap_servers: odh-message-bus-kafka-bootstrap.opf-kafka.svc.cluster.local:9093
        group_id: cluster-logs-consumer
        key_field: message_key
        topics:
        - infra-prod.cluster-logs.audit
        tls:
          enabled: true
          ca_file: "/mnt/ca-bundle.crt"
          crt_file: "/mnt/tls.crt"
          key_file: "/mnt/tls.key"

      vector_metrics_source:
        type: internal_metrics
        scrape_interval_secs: 60

    transforms:
      loki_parser_app:
        type: remap
        inputs:
        - infra-app-logs-kafka
        source: "
          message = parse_json!(.message) \n
          .message = message.message \n
          .docker = message.docker \n
          .kubernetes = message.kubernetes \n "

      loki_parser_infra:
        type: remap
        inputs:
        - infra-infra-logs-kafka
        source: "
          message = parse_json!(.message) \n
          .message = message.message \n
          .docker = message.docker \n
          .kubernetes = message.kubernetes \n "

      loki_parser_audit:
        type: remap
        inputs:
        - infra-audit-logs-kafka
        source: ". = parse_json!(.message)"

    sinks:
      loki_sink_app:
        type: loki
        inputs:
        - loki_parser_app
        endpoint: http://observatorium-loki-distributor-http.opf-observatorium.svc.cluster.local:3100
        out_of_order_action: rewrite_timestamp
        tenant_id: cluster-app-logs
        request:
          concurrency: adaptive
        batch:
          max_bytes: 10240000 # 10MB
          max_events: 10000000
        encoding:
          codec: json
        healthcheck:
          enabled: true
        labels:
          openshift_cluster: moc/infra
          cluster_log_level: app-logs
          k8s_namespace_name: "{{ kubernetes.namespace_name }}"

      loki_sink_infra:
        type: loki
        inputs:
        - loki_parser_infra
        endpoint: http://observatorium-loki-distributor-http.opf-observatorium.svc.cluster.local:3100
        out_of_order_action: rewrite_timestamp
        request:
          concurrency: adaptive
        tenant_id: cluster-infra-logs
        batch:
          max_bytes: 1024000 # 1MB
          max_events: 1000000
        encoding:
          codec: json
        healthcheck:
          enabled: true
        labels:
          openshift_cluster: moc/infra
          cluster_log_level: infra-logs
          k8s_namespace_name: "{{ kubernetes.namespace_name }}"

      loki_sink_audit:
        type: loki
        inputs:
        - loki_parser_audit
        endpoint: http://observatorium-loki-distributor-http.opf-observatorium.svc.cluster.local:3100
        out_of_order_action: rewrite_timestamp
        request:
          concurrency: adaptive
        tenant_id: cluster-audit-logs
        batch:
          max_bytes: 1024000 # 1MB
          max_events: 1000000
        encoding:
          codec: json
        healthcheck:
          enabled: true
        labels:
          openshift_cluster: moc/infra
          cluster_log_level: audit-logs
          k8s_namespace_name: "{{ objectRef.namespace }}"

      vector_metrics_prom_exporter:
        type: prometheus_exporter
        inputs:
        - vector_metrics_source
        address: 0.0.0.0:9598
        default_namespace: service
