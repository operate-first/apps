apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: compactor
  name: observatorium-loki-compactor
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: compactor
  serviceName: observatorium-loki-compactor-grpc
  template:
    metadata:
      labels:
        app.kubernetes.io/component: compactor
    spec:
      containers:
      - args:
        - -target=compactor
        - -config.file=/etc/loki/config/config.yaml
        - -limits.per-user-override-config=/etc/loki/config/overrides.yaml
        - -log.level=error
        - -s3.buckets=$(S3_BUCKETS)
        - -s3.endpoint=$(S3_ENDPOINT)
        - -s3.http.insecure-skip-verify=$(S3_HTTP_INSECURE_SKIP_VERIFY)
        - -s3.insecure=$(S3_INSECURE)
        - -s3.force-path-style=$(S3_FORCE_PATH_STYLE)
        - -s3.region=$(S3_REGION)
        - -s3.access-key-id=$(AWS_ACCESS_KEY_ID)
        - -s3.secret-access-key=$(AWS_SECRET_ACCESS_KEY)
        - -distributor.replication-factor=2
        - -querier.worker-parallelism=2
        env:
        - name: S3_BUCKETS
          valueFrom:
            secretKeyRef:
              key: bucket
              name: loki-objectstorage-secret
        - name: S3_ENDPOINT
          valueFrom:
            secretKeyRef:
              key: endpoint
              name: loki-objectstorage-secret
        - name: S3_HTTP_INSECURE_SKIP_VERIFY
          valueFrom:
            secretKeyRef:
              key: http_config.insecure_skip_verify
              name: loki-objectstorage-secret
        - name: S3_INSECURE
          valueFrom:
            secretKeyRef:
              key: insecure
              name: loki-objectstorage-secret
        - name: S3_FORCE_PATH_STYLE
          valueFrom:
            secretKeyRef:
              key: force_path_style
              name: loki-objectstorage-secret
        - name: S3_REGION
          valueFrom:
            secretKeyRef:
              key: region
              name: loki-objectstorage-secret
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              key: access_key
              name: loki-objectstorage-secret
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: secret_key
              name: loki-objectstorage-secret
        image: quay.io/operate-first/loki:2.3.0
        livenessProbe:
          failureThreshold: 10
          httpGet:
            path: /metrics
            port: 3100
            scheme: HTTP
          periodSeconds: 30
        name: observatorium-loki-compactor
        ports:
        - containerPort: 3100
          name: metrics
        - containerPort: 9095
          name: grpc
        readinessProbe:
          httpGet:
            path: /ready
            port: 3100
            scheme: HTTP
          initialDelaySeconds: 15
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 1000m
            memory: 4Gi
          requests:
            cpu: 500m
            memory: 2Gi
        volumeMounts:
        - mountPath: /etc/loki/config/
          name: config
          readOnly: false
        - mountPath: /data
          name: loki-compactor-storage
          readOnly: false
      volumes:
      - configMap:
          name: observatorium-loki
        name: config
  volumeClaimTemplates:
  - metadata:
      labels:
        app.kubernetes.io/component: compactor
      name: loki-compactor-storage
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 50Gi
