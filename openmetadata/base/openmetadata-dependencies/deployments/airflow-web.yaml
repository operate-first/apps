# Source: openmetadata-dependencies/charts/airflow/templates/webserver/webserver-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-web
  labels:
    app: airflow
    component: web
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      ## multiple web pods can safely run concurrently
      maxSurge: 25%
      maxUnavailable: 0
  selector:
    matchLabels:
      app: airflow
      component: web
  template:
    metadata:
      annotations:
        checksum/secret-config-envs: be70a40407f09d2cd3540c5bafa9065c3d67d2cab36f7085c20a5e5bfa0de4c8
        checksum/secret-local-settings: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
        checksum/config-webserver-config: de5fe914aa70461467c27b9665023ea2ea1fc5f501d42d43a785a5a42064d486
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: airflow
        component: web
    spec:
      restartPolicy: Always
      nodeSelector: {}
      affinity: {}
      tolerations: []
      serviceAccountName: airflow
      initContainers:
        - name: check-db
          image: quay.io/operate-first/om-airflow:0.10.3
          imagePullPolicy: IfNotPresent
          envFrom:
            - secretRef:
                name: openmetadata-dependencies-config-envs
            - configMapRef:
                name: openmetadata-dependencies-config-envs
          env:
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: airflow-mysql-secrets
                  key: airflow-mysql-password
            - name: REDIS_PASSWORD
              value: ""
            - name: CONNECTION_CHECK_MAX_COUNT
              value: "0"
          command:
            - "/usr/bin/dumb-init"
            - "--"
            - "/entrypoint"
          args:
            - "bash"
            - "-c"
            - "exec timeout 60s airflow db check"
          volumeMounts:
            - name: dags-data
              mountPath: /opt/airflow/dags
              subPath:
            - name: logs-data
              mountPath: /opt/airflow/logs
              subPath:
        - name: wait-for-db-migrations
          image: quay.io/operate-first/om-airflow:0.10.3
          imagePullPolicy: IfNotPresent
          envFrom:
            - secretRef:
                name: openmetadata-dependencies-config-envs
            - configMapRef:
                name: openmetadata-dependencies-config-envs
          env:
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: airflow-mysql-secrets
                  key: airflow-mysql-password
            - name: REDIS_PASSWORD
              value: ""
            - name: CONNECTION_CHECK_MAX_COUNT
              value: "0"
          command:
            - "/usr/bin/dumb-init"
            - "--"
            - "/entrypoint"
          args:
            - "bash"
            - "-c"
            - "exec airflow db check-migrations -t 60"
          volumeMounts:
            - name: dags-data
              mountPath: /opt/airflow/dags
              subPath:
            - name: logs-data
              mountPath: /opt/airflow/logs
              subPath:
      containers:
        - name: airflow-web
          image: quay.io/operate-first/om-airflow:0.10.3
          imagePullPolicy: IfNotPresent
          resources: {}
          ports:
            - name: web
              containerPort: 8080
              protocol: TCP
          envFrom:
            - secretRef:
                name: openmetadata-dependencies-config-envs
            - configMapRef:
                name: openmetadata-dependencies-config-envs
          env:
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: airflow-mysql-secrets
                  key: airflow-mysql-password
            - name: REDIS_PASSWORD
              value: ""
            - name: CONNECTION_CHECK_MAX_COUNT
              value: "0"
          command:
            - "/usr/bin/dumb-init"
            - "--"
            - "/entrypoint"
          args:
            - "bash"
            - "-c"
            - "exec airflow webserver"
          livenessProbe:
            initialDelaySeconds: 360
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 10
            httpGet:
              scheme: HTTP
              path: /health
              port: web
          readinessProbe:
            initialDelaySeconds: 360
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 10
            httpGet:
              scheme: HTTP
              path: /health
              port: web
          volumeMounts:
            - name: dags-data
              mountPath: /opt/airflow/dags
              subPath:
            - name: logs-data
              mountPath: /opt/airflow/logs
              subPath:
            - name: webserver-config
              mountPath: /opt/airflow/webserver_config.py
              subPath: webserver_config.py
              readOnly: true
      volumes:
        - name: dags-data
          persistentVolumeClaim:
            claimName: airflow-dags
        - name: logs-data
          persistentVolumeClaim:
            claimName: airflow-logs
        - name: webserver-config
          configMap:
            name: airflow-webserver-config
            defaultMode: 0644
