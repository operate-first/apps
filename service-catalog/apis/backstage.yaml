apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: backstage
  description: Backend API of the backstage backend
spec:
  type: openapi
  lifecycle: production
  owner: group:operate-first
  system: service-catalog
  # This is not the complete API definition since they don't have an OPENAPI reference
  # file and I don't think writing it manually is the option since it might change and
  # we would need to update it manually each time
  definition: |
    openapi: 3.0.3
    info:
      title: Service Catalog API
      description: |-
        Full backstage API documentation is [upstream documentation](https://backstage.io/docs/features/software-catalog/software-catalog-api).
      version: 1.6.0
    servers:
      - url: https://service-catalog.operate-first.cloud/api
    tags:
      - name: Cluster Status
        description: API for the cluster status plugin
    paths:
      /clusterStatus/status:
        get:
          tags:
            - Cluster Status
          summary: Get all clusters
          description: Returns all clsuters
          responses:
            '200':
              description: successful operation
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/clusters'
      /clusterStatus/status/{name}:
        get:
          tags:
            - Cluster Status
          summary: Find cluster by cluster name
          description: Returns a single cluster
          parameters:
            - name: name
              in: path
              description: name of cluster to return
              required: true
              schema:
                type: string
          responses:
            '200':
              description: successful operation
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/clusterStatus'


    components:
      schemas:
        clusters:
          type: array
          items:
            $ref: '#/components/schemas/clusterStatus'
        clusterStatus:
          type: object
          properties:
            consoleUrl:
              type: string
              example: https://console-openshift-console.apps.smaug.na.operate-first.cloud
            kubernetesVersion:
              type: string
              example: v1.22.3+fdba464
            name:
              type: string
              example: "smaug"
            oauthUrl:
              type: string
              example: https://oauth-openshift.apps.smaug.na.operate-first.cloud/oauth/token/implicit
            openshiftId:
              type: string
              example: 5d448ae7-05f1-42cc-aacc-3122a8ad0184
            openshiftVersion:
              type: string
              example: 4.9.21
            platform:
              type: string
              example: BareMetal
            region:
              type: string
              example: RegionOne
            status:
              $ref: '#/components/schemas/Status'
            availableResources:
              $ref: '#/components/schemas/availableResources'
            allocatableResources:
              $ref: '#/components/schemas/allocatableResources'
        availableResources:
          type: object
          properties:
            cpuCores:
              type: number
              example: 1152
            memorySize:
              type: string
              description: Value is always in Ki units
              example: 7505192052Ki
            numberOfPods:
              type: number
              example: 7750
        allocatableResources:
          type: object
          properties:
            cpuCores:
              type: number
              example: 1135
            memorySize:
              type: string
              description: Value is always in Ki units
              example: 7469511796Ki
            numberOfPods:
              type: number
              example: 7750
        Status:
          type: object
          properties:
            available:
              type: boolean
              example: true
            reason:
              type: string
              example: Cluster is up
          xml:
            name: category
