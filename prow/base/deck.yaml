---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: "deck"
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: "deck"
rules:
  - apiGroups:
      - ""
    resources:
      - pods/log
    verbs:
      - get
  - apiGroups:
      - "prow.k8s.io"
    resources:
      - prowjobs
    verbs:
      - get
      - list
      - watch
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: "deck"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: "deck"
subjects:
  - kind: ServiceAccount
    name: "deck"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deck
  labels:
    app: deck
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: deck
  template:
    metadata:
      labels:
        app: deck
    spec:
      serviceAccountName: deck
      terminationGracePeriodSeconds: 30
      containers:
        - name: deck
          image: deck:latest
          args:
            - --config-path=/etc/config/config.yaml
            - --plugin-config=/etc/plugins/plugins.yaml
            - --github-token-path=/etc/github/oauth
            - --github-oauth-config-file=/etc/githuboauth/secret
            - --tide-url=http://tide/
            - --hook-url=http://hook:8888/plugin-help
            - --github-endpoint=http://ghproxy
            - --github-graphql-endpoint=http://ghproxy/graphql
            - --github-endpoint=https://api.github.com
            - --oauth-url=/github-login
            - --plugin-config=/etc/plugins/plugins.yaml
            - --s3-credentials-file=/etc/s3-credentials/service-account.json
            - --cookie-secret=/etc/cookie/secret
            - --spyglass=true
          ports:
            - name: main
              containerPort: 8080
            - name: metrics
              containerPort: 9090
          volumeMounts:
            - name: config
              mountPath: /etc/config
              readOnly: true
            - name: oauth
              mountPath: /etc/github
              readOnly: true
            - mountPath: /etc/githuboauth
              name: oauth-config
              readOnly: true
            - name: plugins
              mountPath: /etc/plugins
              readOnly: true
            - name: s3-credentials
              mountPath: /etc/s3-credentials
              readOnly: true
            - mountPath: /etc/cookie
              name: cookie-secret
              readOnly: true
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "100m"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 3
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /healthz/ready
              port: 8081
            initialDelaySeconds: 10
            periodSeconds: 3
            timeoutSeconds: 600
      volumes:
        - name: config
          configMap:
            name: config
        - name: oauth
          secret:
            secretName: oauth-token
        - name: plugins
          configMap:
            name: plugins
        - name: s3-credentials
          secret:
            secretName: s3-credentials
        - name: oauth-config
          secret:
            secretName: github-oauth-config
        - name: cookie-secret
          secret:
            secretName: cookie
---
apiVersion: v1
kind: Service
metadata:
  name: deck
spec:
  selector:
    app: deck
  ports:
    - name: main
      port: 80
      targetPort: 8080
      protocol: TCP
    - name: metrics
      port: 9090
      protocol: TCP
  type: NodePort
